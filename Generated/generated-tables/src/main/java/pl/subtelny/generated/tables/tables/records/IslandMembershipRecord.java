/*
 * This file is generated by jOOQ.
 */
package pl.subtelny.generated.tables.tables.records;


import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import pl.subtelny.generated.tables.tables.IslandMembership;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IslandMembershipRecord extends UpdatableRecordImpl<IslandMembershipRecord> implements Record3<String, Integer, String> {

    private static final long serialVersionUID = -1527362127;

    /**
     * Setter for <code>public.island_membership.island_member_id</code>.
     */
    public void setIslandMemberId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.island_membership.island_member_id</code>.
     */
    public String getIslandMemberId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.island_membership.island_id</code>.
     */
    public void setIslandId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.island_membership.island_id</code>.
     */
    public Integer getIslandId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.island_membership.rank</code>.
     */
    public void setRank(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.island_membership.rank</code>.
     */
    public String getRank() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return IslandMembership.ISLAND_MEMBERSHIP.ISLAND_MEMBER_ID;
    }

    @Override
    public Field<Integer> field2() {
        return IslandMembership.ISLAND_MEMBERSHIP.ISLAND_ID;
    }

    @Override
    public Field<String> field3() {
        return IslandMembership.ISLAND_MEMBERSHIP.RANK;
    }

    @Override
    public String component1() {
        return getIslandMemberId();
    }

    @Override
    public Integer component2() {
        return getIslandId();
    }

    @Override
    public String component3() {
        return getRank();
    }

    @Override
    public String value1() {
        return getIslandMemberId();
    }

    @Override
    public Integer value2() {
        return getIslandId();
    }

    @Override
    public String value3() {
        return getRank();
    }

    @Override
    public IslandMembershipRecord value1(String value) {
        setIslandMemberId(value);
        return this;
    }

    @Override
    public IslandMembershipRecord value2(Integer value) {
        setIslandId(value);
        return this;
    }

    @Override
    public IslandMembershipRecord value3(String value) {
        setRank(value);
        return this;
    }

    @Override
    public IslandMembershipRecord values(String value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IslandMembershipRecord
     */
    public IslandMembershipRecord() {
        super(IslandMembership.ISLAND_MEMBERSHIP);
    }

    /**
     * Create a detached, initialised IslandMembershipRecord
     */
    public IslandMembershipRecord(String islandMemberId, Integer islandId, String rank) {
        super(IslandMembership.ISLAND_MEMBERSHIP);

        set(0, islandMemberId);
        set(1, islandId);
        set(2, rank);
    }
}
