/*
 * This file is generated by jOOQ.
 */
package pl.subtelny.generated.tables.tables.records;


import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import pl.subtelny.generated.tables.tables.IslandMemberships;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IslandMembershipsRecord extends UpdatableRecordImpl<IslandMembershipsRecord> implements Record3<String, String, Boolean> {

    private static final long serialVersionUID = 496785223;

    /**
     * Setter for <code>public.island_memberships.island_id</code>.
     */
    public void setIslandId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.island_memberships.island_id</code>.
     */
    public String getIslandId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.island_memberships.island_member_id</code>.
     */
    public void setIslandMemberId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.island_memberships.island_member_id</code>.
     */
    public String getIslandMemberId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.island_memberships.owner</code>.
     */
    public void setOwner(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.island_memberships.owner</code>.
     */
    public Boolean getOwner() {
        return (Boolean) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, Boolean> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, Boolean> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return IslandMemberships.ISLAND_MEMBERSHIPS.ISLAND_ID;
    }

    @Override
    public Field<String> field2() {
        return IslandMemberships.ISLAND_MEMBERSHIPS.ISLAND_MEMBER_ID;
    }

    @Override
    public Field<Boolean> field3() {
        return IslandMemberships.ISLAND_MEMBERSHIPS.OWNER;
    }

    @Override
    public String component1() {
        return getIslandId();
    }

    @Override
    public String component2() {
        return getIslandMemberId();
    }

    @Override
    public Boolean component3() {
        return getOwner();
    }

    @Override
    public String value1() {
        return getIslandId();
    }

    @Override
    public String value2() {
        return getIslandMemberId();
    }

    @Override
    public Boolean value3() {
        return getOwner();
    }

    @Override
    public IslandMembershipsRecord value1(String value) {
        setIslandId(value);
        return this;
    }

    @Override
    public IslandMembershipsRecord value2(String value) {
        setIslandMemberId(value);
        return this;
    }

    @Override
    public IslandMembershipsRecord value3(Boolean value) {
        setOwner(value);
        return this;
    }

    @Override
    public IslandMembershipsRecord values(String value1, String value2, Boolean value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IslandMembershipsRecord
     */
    public IslandMembershipsRecord() {
        super(IslandMemberships.ISLAND_MEMBERSHIPS);
    }

    /**
     * Create a detached, initialised IslandMembershipsRecord
     */
    public IslandMembershipsRecord(String islandId, String islandMemberId, Boolean owner) {
        super(IslandMemberships.ISLAND_MEMBERSHIPS);

        set(0, islandId);
        set(1, islandMemberId);
        set(2, owner);
    }
}
