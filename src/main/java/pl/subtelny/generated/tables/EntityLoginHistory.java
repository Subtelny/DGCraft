/*
 * This file is generated by jOOQ.
 */
package pl.subtelny.generated.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import pl.subtelny.generated.Indexes;
import pl.subtelny.generated.Keys;
import pl.subtelny.generated.Public;
import pl.subtelny.generated.tables.records.EntityLoginHistoryRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EntityLoginHistory extends TableImpl<EntityLoginHistoryRecord> {

    private static final long serialVersionUID = -213394725;

    /**
     * The reference instance of <code>public.entity_login_history</code>
     */
    public static final EntityLoginHistory ENTITY_LOGIN_HISTORY = new EntityLoginHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EntityLoginHistoryRecord> getRecordType() {
        return EntityLoginHistoryRecord.class;
    }

    /**
     * The column <code>public.entity_login_history.id</code>.
     */
    public final TableField<EntityLoginHistoryRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('entity_login_history_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.entity_login_history.start_date</code>.
     */
    public final TableField<EntityLoginHistoryRecord, Timestamp> START_DATE = createField(DSL.name("start_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.entity_login_history.end_date</code>.
     */
    public final TableField<EntityLoginHistoryRecord, Timestamp> END_DATE = createField(DSL.name("end_date"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>public.entity_login_history.entity_account</code>.
     */
    public final TableField<EntityLoginHistoryRecord, UUID> ENTITY_ACCOUNT = createField(DSL.name("entity_account"), org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

    /**
     * Create a <code>public.entity_login_history</code> table reference
     */
    public EntityLoginHistory() {
        this(DSL.name("entity_login_history"), null);
    }

    /**
     * Create an aliased <code>public.entity_login_history</code> table reference
     */
    public EntityLoginHistory(String alias) {
        this(DSL.name(alias), ENTITY_LOGIN_HISTORY);
    }

    /**
     * Create an aliased <code>public.entity_login_history</code> table reference
     */
    public EntityLoginHistory(Name alias) {
        this(alias, ENTITY_LOGIN_HISTORY);
    }

    private EntityLoginHistory(Name alias, Table<EntityLoginHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private EntityLoginHistory(Name alias, Table<EntityLoginHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> EntityLoginHistory(Table<O> child, ForeignKey<O, EntityLoginHistoryRecord> key) {
        super(child, key, ENTITY_LOGIN_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ENTITY_LOGIN_HISTORY_PKEY);
    }

    @Override
    public Identity<EntityLoginHistoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ENTITY_LOGIN_HISTORY;
    }

    @Override
    public UniqueKey<EntityLoginHistoryRecord> getPrimaryKey() {
        return Keys.ENTITY_LOGIN_HISTORY_PKEY;
    }

    @Override
    public List<UniqueKey<EntityLoginHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<EntityLoginHistoryRecord>>asList(Keys.ENTITY_LOGIN_HISTORY_PKEY);
    }

    @Override
    public List<ForeignKey<EntityLoginHistoryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EntityLoginHistoryRecord, ?>>asList(Keys.ENTITY_LOGIN_HISTORY__ENTITY_LOGIN_HISTORY_ENTITY_ACCOUNT_FKEY);
    }

    public EntityAccount entityAccount() {
        return new EntityAccount(this, Keys.ENTITY_LOGIN_HISTORY__ENTITY_LOGIN_HISTORY_ENTITY_ACCOUNT_FKEY);
    }

    @Override
    public EntityLoginHistory as(String alias) {
        return new EntityLoginHistory(DSL.name(alias), this);
    }

    @Override
    public EntityLoginHistory as(Name alias) {
        return new EntityLoginHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityLoginHistory rename(String name) {
        return new EntityLoginHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityLoginHistory rename(Name name) {
        return new EntityLoginHistory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Timestamp, Timestamp, UUID> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
