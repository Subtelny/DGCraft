/*
 * This file is generated by jOOQ.
 */
package pl.subtelny.generated.tables.daos;


import java.util.List;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import pl.subtelny.generated.tables.EntityAccount;
import pl.subtelny.generated.tables.records.EntityAccountRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EntityAccountDao extends DAOImpl<EntityAccountRecord, pl.subtelny.generated.tables.pojos.EntityAccount, UUID> {

    /**
     * Create a new EntityAccountDao without any configuration
     */
    public EntityAccountDao() {
        super(EntityAccount.ENTITY_ACCOUNT, pl.subtelny.generated.tables.pojos.EntityAccount.class);
    }

    /**
     * Create a new EntityAccountDao with an attached configuration
     */
    public EntityAccountDao(Configuration configuration) {
        super(EntityAccount.ENTITY_ACCOUNT, pl.subtelny.generated.tables.pojos.EntityAccount.class, configuration);
    }

    @Override
    public UUID getId(pl.subtelny.generated.tables.pojos.EntityAccount object) {
        return object.getUuid();
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<pl.subtelny.generated.tables.pojos.EntityAccount> fetchRangeOfUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(EntityAccount.ENTITY_ACCOUNT.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<pl.subtelny.generated.tables.pojos.EntityAccount> fetchByUuid(UUID... values) {
        return fetch(EntityAccount.ENTITY_ACCOUNT.UUID, values);
    }

    /**
     * Fetch a unique record that has <code>uuid = value</code>
     */
    public pl.subtelny.generated.tables.pojos.EntityAccount fetchOneByUuid(UUID value) {
        return fetchOne(EntityAccount.ENTITY_ACCOUNT.UUID, value);
    }

    /**
     * Fetch records that have <code>nickname BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<pl.subtelny.generated.tables.pojos.EntityAccount> fetchRangeOfNickname(String lowerInclusive, String upperInclusive) {
        return fetchRange(EntityAccount.ENTITY_ACCOUNT.NICKNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>nickname IN (values)</code>
     */
    public List<pl.subtelny.generated.tables.pojos.EntityAccount> fetchByNickname(String... values) {
        return fetch(EntityAccount.ENTITY_ACCOUNT.NICKNAME, values);
    }
}
