/*
 * This file is generated by jOOQ.
 */
package pl.subtelny.islands.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import pl.subtelny.islands.generated.tables.GuildIslands;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GuildIslandsRecord extends UpdatableRecordImpl<GuildIslandsRecord> implements Record3<Integer, Integer, Timestamp> {

    private static final long serialVersionUID = 959167869;

    /**
     * Setter for <code>public.guild_islands.island_id</code>.
     */
    public void setIslandId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.guild_islands.island_id</code>.
     */
    public Integer getIslandId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.guild_islands.owner</code>.
     */
    public void setOwner(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.guild_islands.owner</code>.
     */
    public Integer getOwner() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.guild_islands.protection</code>.
     */
    public void setProtection(Timestamp value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.guild_islands.protection</code>.
     */
    public Timestamp getProtection() {
        return (Timestamp) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Timestamp> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Timestamp> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return GuildIslands.GUILD_ISLANDS.ISLAND_ID;
    }

    @Override
    public Field<Integer> field2() {
        return GuildIslands.GUILD_ISLANDS.OWNER;
    }

    @Override
    public Field<Timestamp> field3() {
        return GuildIslands.GUILD_ISLANDS.PROTECTION;
    }

    @Override
    public Integer component1() {
        return getIslandId();
    }

    @Override
    public Integer component2() {
        return getOwner();
    }

    @Override
    public Timestamp component3() {
        return getProtection();
    }

    @Override
    public Integer value1() {
        return getIslandId();
    }

    @Override
    public Integer value2() {
        return getOwner();
    }

    @Override
    public Timestamp value3() {
        return getProtection();
    }

    @Override
    public GuildIslandsRecord value1(Integer value) {
        setIslandId(value);
        return this;
    }

    @Override
    public GuildIslandsRecord value2(Integer value) {
        setOwner(value);
        return this;
    }

    @Override
    public GuildIslandsRecord value3(Timestamp value) {
        setProtection(value);
        return this;
    }

    @Override
    public GuildIslandsRecord values(Integer value1, Integer value2, Timestamp value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GuildIslandsRecord
     */
    public GuildIslandsRecord() {
        super(GuildIslands.GUILD_ISLANDS);
    }

    /**
     * Create a detached, initialised GuildIslandsRecord
     */
    public GuildIslandsRecord(Integer islandId, Integer owner, Timestamp protection) {
        super(GuildIslands.GUILD_ISLANDS);

        set(0, islandId);
        set(1, owner);
        set(2, protection);
    }
}
