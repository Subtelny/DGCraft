/*
 * This file is generated by jOOQ.
 */
package pl.subtelny.islands.generated.tables.records;


import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import pl.subtelny.islands.generated.tables.SkyblockIslands;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SkyblockIslandsRecord extends UpdatableRecordImpl<SkyblockIslandsRecord> implements Record6<Integer, Integer, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1866829813;

    /**
     * Setter for <code>public.skyblock_islands.island_id</code>.
     */
    public void setIslandId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.skyblock_islands.island_id</code>.
     */
    public Integer getIslandId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.skyblock_islands.x</code>.
     */
    public void setX(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.skyblock_islands.x</code>.
     */
    public Integer getX() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.skyblock_islands.z</code>.
     */
    public void setZ(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.skyblock_islands.z</code>.
     */
    public Integer getZ() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.skyblock_islands.owner</code>.
     */
    public void setOwner(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.skyblock_islands.owner</code>.
     */
    public Integer getOwner() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.skyblock_islands.points</code>.
     */
    public void setPoints(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.skyblock_islands.points</code>.
     */
    public Integer getPoints() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.skyblock_islands.extend_level</code>.
     */
    public void setExtendLevel(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.skyblock_islands.extend_level</code>.
     */
    public Integer getExtendLevel() {
        return (Integer) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, Integer, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return SkyblockIslands.SKYBLOCK_ISLANDS.ISLAND_ID;
    }

    @Override
    public Field<Integer> field2() {
        return SkyblockIslands.SKYBLOCK_ISLANDS.X;
    }

    @Override
    public Field<Integer> field3() {
        return SkyblockIslands.SKYBLOCK_ISLANDS.Z;
    }

    @Override
    public Field<Integer> field4() {
        return SkyblockIslands.SKYBLOCK_ISLANDS.OWNER;
    }

    @Override
    public Field<Integer> field5() {
        return SkyblockIslands.SKYBLOCK_ISLANDS.POINTS;
    }

    @Override
    public Field<Integer> field6() {
        return SkyblockIslands.SKYBLOCK_ISLANDS.EXTEND_LEVEL;
    }

    @Override
    public Integer component1() {
        return getIslandId();
    }

    @Override
    public Integer component2() {
        return getX();
    }

    @Override
    public Integer component3() {
        return getZ();
    }

    @Override
    public Integer component4() {
        return getOwner();
    }

    @Override
    public Integer component5() {
        return getPoints();
    }

    @Override
    public Integer component6() {
        return getExtendLevel();
    }

    @Override
    public Integer value1() {
        return getIslandId();
    }

    @Override
    public Integer value2() {
        return getX();
    }

    @Override
    public Integer value3() {
        return getZ();
    }

    @Override
    public Integer value4() {
        return getOwner();
    }

    @Override
    public Integer value5() {
        return getPoints();
    }

    @Override
    public Integer value6() {
        return getExtendLevel();
    }

    @Override
    public SkyblockIslandsRecord value1(Integer value) {
        setIslandId(value);
        return this;
    }

    @Override
    public SkyblockIslandsRecord value2(Integer value) {
        setX(value);
        return this;
    }

    @Override
    public SkyblockIslandsRecord value3(Integer value) {
        setZ(value);
        return this;
    }

    @Override
    public SkyblockIslandsRecord value4(Integer value) {
        setOwner(value);
        return this;
    }

    @Override
    public SkyblockIslandsRecord value5(Integer value) {
        setPoints(value);
        return this;
    }

    @Override
    public SkyblockIslandsRecord value6(Integer value) {
        setExtendLevel(value);
        return this;
    }

    @Override
    public SkyblockIslandsRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Integer value5, Integer value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SkyblockIslandsRecord
     */
    public SkyblockIslandsRecord() {
        super(SkyblockIslands.SKYBLOCK_ISLANDS);
    }

    /**
     * Create a detached, initialised SkyblockIslandsRecord
     */
    public SkyblockIslandsRecord(Integer islandId, Integer x, Integer z, Integer owner, Integer points, Integer extendLevel) {
        super(SkyblockIslands.SKYBLOCK_ISLANDS);

        set(0, islandId);
        set(1, x);
        set(2, z);
        set(3, owner);
        set(4, points);
        set(5, extendLevel);
    }
}
