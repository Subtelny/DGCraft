/*
 * This file is generated by jOOQ.
 */
package pl.subtelny.core.generated.tables.daos;


import java.sql.Timestamp;
import java.util.List;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import pl.subtelny.core.generated.tables.AnemiaLoginHistory;
import pl.subtelny.core.generated.tables.records.AnemiaLoginHistoryRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnemiaLoginHistoryDao extends DAOImpl<AnemiaLoginHistoryRecord, pl.subtelny.core.generated.tables.pojos.AnemiaLoginHistory, Integer> {

    /**
     * Create a new AnemiaLoginHistoryDao without any configuration
     */
    public AnemiaLoginHistoryDao() {
        super(AnemiaLoginHistory.ANEMIA_LOGIN_HISTORY, pl.subtelny.core.generated.tables.pojos.AnemiaLoginHistory.class);
    }

    /**
     * Create a new AnemiaLoginHistoryDao with an attached configuration
     */
    public AnemiaLoginHistoryDao(Configuration configuration) {
        super(AnemiaLoginHistory.ANEMIA_LOGIN_HISTORY, pl.subtelny.core.generated.tables.pojos.AnemiaLoginHistory.class, configuration);
    }

    @Override
    public Integer getId(pl.subtelny.core.generated.tables.pojos.AnemiaLoginHistory object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<pl.subtelny.core.generated.tables.pojos.AnemiaLoginHistory> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(AnemiaLoginHistory.ANEMIA_LOGIN_HISTORY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<pl.subtelny.core.generated.tables.pojos.AnemiaLoginHistory> fetchById(Integer... values) {
        return fetch(AnemiaLoginHistory.ANEMIA_LOGIN_HISTORY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public pl.subtelny.core.generated.tables.pojos.AnemiaLoginHistory fetchOneById(Integer value) {
        return fetchOne(AnemiaLoginHistory.ANEMIA_LOGIN_HISTORY.ID, value);
    }

    /**
     * Fetch records that have <code>start_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<pl.subtelny.core.generated.tables.pojos.AnemiaLoginHistory> fetchRangeOfStartDate(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(AnemiaLoginHistory.ANEMIA_LOGIN_HISTORY.START_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>start_date IN (values)</code>
     */
    public List<pl.subtelny.core.generated.tables.pojos.AnemiaLoginHistory> fetchByStartDate(Timestamp... values) {
        return fetch(AnemiaLoginHistory.ANEMIA_LOGIN_HISTORY.START_DATE, values);
    }

    /**
     * Fetch records that have <code>end_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<pl.subtelny.core.generated.tables.pojos.AnemiaLoginHistory> fetchRangeOfEndDate(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(AnemiaLoginHistory.ANEMIA_LOGIN_HISTORY.END_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>end_date IN (values)</code>
     */
    public List<pl.subtelny.core.generated.tables.pojos.AnemiaLoginHistory> fetchByEndDate(Timestamp... values) {
        return fetch(AnemiaLoginHistory.ANEMIA_LOGIN_HISTORY.END_DATE, values);
    }

    /**
     * Fetch records that have <code>account BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<pl.subtelny.core.generated.tables.pojos.AnemiaLoginHistory> fetchRangeOfAccount(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(AnemiaLoginHistory.ANEMIA_LOGIN_HISTORY.ACCOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>account IN (values)</code>
     */
    public List<pl.subtelny.core.generated.tables.pojos.AnemiaLoginHistory> fetchByAccount(UUID... values) {
        return fetch(AnemiaLoginHistory.ANEMIA_LOGIN_HISTORY.ACCOUNT, values);
    }
}
