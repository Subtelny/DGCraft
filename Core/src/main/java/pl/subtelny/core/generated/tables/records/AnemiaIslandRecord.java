/*
 * This file is generated by jOOQ.
 */
package pl.subtelny.core.generated.tables.records;


import java.sql.Timestamp;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import pl.subtelny.core.generated.tables.AnemiaIsland;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnemiaIslandRecord extends UpdatableRecordImpl<AnemiaIslandRecord> implements Record4<Integer, Integer, UUID, Timestamp> {

    private static final long serialVersionUID = 379534496;

    /**
     * Setter for <code>public.anemia_island.x</code>.
     */
    public void setX(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.anemia_island.x</code>.
     */
    public Integer getX() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.anemia_island.y</code>.
     */
    public void setY(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.anemia_island.y</code>.
     */
    public Integer getY() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.anemia_island.owner</code>.
     */
    public void setOwner(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.anemia_island.owner</code>.
     */
    public UUID getOwner() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.anemia_island.created_date</code>.
     */
    public void setCreatedDate(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.anemia_island.created_date</code>.
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, UUID, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, UUID, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return AnemiaIsland.ANEMIA_ISLAND.X;
    }

    @Override
    public Field<Integer> field2() {
        return AnemiaIsland.ANEMIA_ISLAND.Y;
    }

    @Override
    public Field<UUID> field3() {
        return AnemiaIsland.ANEMIA_ISLAND.OWNER;
    }

    @Override
    public Field<Timestamp> field4() {
        return AnemiaIsland.ANEMIA_ISLAND.CREATED_DATE;
    }

    @Override
    public Integer component1() {
        return getX();
    }

    @Override
    public Integer component2() {
        return getY();
    }

    @Override
    public UUID component3() {
        return getOwner();
    }

    @Override
    public Timestamp component4() {
        return getCreatedDate();
    }

    @Override
    public Integer value1() {
        return getX();
    }

    @Override
    public Integer value2() {
        return getY();
    }

    @Override
    public UUID value3() {
        return getOwner();
    }

    @Override
    public Timestamp value4() {
        return getCreatedDate();
    }

    @Override
    public AnemiaIslandRecord value1(Integer value) {
        setX(value);
        return this;
    }

    @Override
    public AnemiaIslandRecord value2(Integer value) {
        setY(value);
        return this;
    }

    @Override
    public AnemiaIslandRecord value3(UUID value) {
        setOwner(value);
        return this;
    }

    @Override
    public AnemiaIslandRecord value4(Timestamp value) {
        setCreatedDate(value);
        return this;
    }

    @Override
    public AnemiaIslandRecord values(Integer value1, Integer value2, UUID value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AnemiaIslandRecord
     */
    public AnemiaIslandRecord() {
        super(AnemiaIsland.ANEMIA_ISLAND);
    }

    /**
     * Create a detached, initialised AnemiaIslandRecord
     */
    public AnemiaIslandRecord(Integer x, Integer y, UUID owner, Timestamp createdDate) {
        super(AnemiaIsland.ANEMIA_ISLAND);

        set(0, x);
        set(1, y);
        set(2, owner);
        set(3, createdDate);
    }
}
