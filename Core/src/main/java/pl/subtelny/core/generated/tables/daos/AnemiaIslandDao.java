/*
 * This file is generated by jOOQ.
 */
package pl.subtelny.core.generated.tables.daos;


import java.sql.Timestamp;
import java.util.List;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;

import pl.subtelny.core.generated.tables.AnemiaIsland;
import pl.subtelny.core.generated.tables.records.AnemiaIslandRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnemiaIslandDao extends DAOImpl<AnemiaIslandRecord, pl.subtelny.core.generated.tables.pojos.AnemiaIsland, Record2<Integer, Integer>> {

    /**
     * Create a new AnemiaIslandDao without any configuration
     */
    public AnemiaIslandDao() {
        super(AnemiaIsland.ANEMIA_ISLAND, pl.subtelny.core.generated.tables.pojos.AnemiaIsland.class);
    }

    /**
     * Create a new AnemiaIslandDao with an attached configuration
     */
    public AnemiaIslandDao(Configuration configuration) {
        super(AnemiaIsland.ANEMIA_ISLAND, pl.subtelny.core.generated.tables.pojos.AnemiaIsland.class, configuration);
    }

    @Override
    public Record2<Integer, Integer> getId(pl.subtelny.core.generated.tables.pojos.AnemiaIsland object) {
        return compositeKeyRecord(object.getX(), object.getY());
    }

    /**
     * Fetch records that have <code>x BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<pl.subtelny.core.generated.tables.pojos.AnemiaIsland> fetchRangeOfX(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(AnemiaIsland.ANEMIA_ISLAND.X, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>x IN (values)</code>
     */
    public List<pl.subtelny.core.generated.tables.pojos.AnemiaIsland> fetchByX(Integer... values) {
        return fetch(AnemiaIsland.ANEMIA_ISLAND.X, values);
    }

    /**
     * Fetch records that have <code>y BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<pl.subtelny.core.generated.tables.pojos.AnemiaIsland> fetchRangeOfY(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(AnemiaIsland.ANEMIA_ISLAND.Y, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>y IN (values)</code>
     */
    public List<pl.subtelny.core.generated.tables.pojos.AnemiaIsland> fetchByY(Integer... values) {
        return fetch(AnemiaIsland.ANEMIA_ISLAND.Y, values);
    }

    /**
     * Fetch records that have <code>owner BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<pl.subtelny.core.generated.tables.pojos.AnemiaIsland> fetchRangeOfOwner(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(AnemiaIsland.ANEMIA_ISLAND.OWNER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>owner IN (values)</code>
     */
    public List<pl.subtelny.core.generated.tables.pojos.AnemiaIsland> fetchByOwner(UUID... values) {
        return fetch(AnemiaIsland.ANEMIA_ISLAND.OWNER, values);
    }

    /**
     * Fetch a unique record that has <code>owner = value</code>
     */
    public pl.subtelny.core.generated.tables.pojos.AnemiaIsland fetchOneByOwner(UUID value) {
        return fetchOne(AnemiaIsland.ANEMIA_ISLAND.OWNER, value);
    }

    /**
     * Fetch records that have <code>created_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<pl.subtelny.core.generated.tables.pojos.AnemiaIsland> fetchRangeOfCreatedDate(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(AnemiaIsland.ANEMIA_ISLAND.CREATED_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_date IN (values)</code>
     */
    public List<pl.subtelny.core.generated.tables.pojos.AnemiaIsland> fetchByCreatedDate(Timestamp... values) {
        return fetch(AnemiaIsland.ANEMIA_ISLAND.CREATED_DATE, values);
    }
}
