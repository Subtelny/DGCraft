/*
 * This file is generated by jOOQ.
 */
package pl.subtelny.core.generated.tables.records;


import java.sql.Timestamp;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import pl.subtelny.core.generated.tables.Accounts;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountsRecord extends UpdatableRecordImpl<AccountsRecord> implements Record4<UUID, String, String, Timestamp> {

    private static final long serialVersionUID = 1533077729;

    /**
     * Setter for <code>public.accounts.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.accounts.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.accounts.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.accounts.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.accounts.display_name</code>.
     */
    public void setDisplayName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.accounts.display_name</code>.
     */
    public String getDisplayName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.accounts.last_online</code>.
     */
    public void setLastOnline(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.accounts.last_online</code>.
     */
    public Timestamp getLastOnline() {
        return (Timestamp) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, String, String, Timestamp> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, String, String, Timestamp> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Accounts.ACCOUNTS.ID;
    }

    @Override
    public Field<String> field2() {
        return Accounts.ACCOUNTS.NAME;
    }

    @Override
    public Field<String> field3() {
        return Accounts.ACCOUNTS.DISPLAY_NAME;
    }

    @Override
    public Field<Timestamp> field4() {
        return Accounts.ACCOUNTS.LAST_ONLINE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDisplayName();
    }

    @Override
    public Timestamp component4() {
        return getLastOnline();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDisplayName();
    }

    @Override
    public Timestamp value4() {
        return getLastOnline();
    }

    @Override
    public AccountsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public AccountsRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public AccountsRecord value3(String value) {
        setDisplayName(value);
        return this;
    }

    @Override
    public AccountsRecord value4(Timestamp value) {
        setLastOnline(value);
        return this;
    }

    @Override
    public AccountsRecord values(UUID value1, String value2, String value3, Timestamp value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountsRecord
     */
    public AccountsRecord() {
        super(Accounts.ACCOUNTS);
    }

    /**
     * Create a detached, initialised AccountsRecord
     */
    public AccountsRecord(UUID id, String name, String displayName, Timestamp lastOnline) {
        super(Accounts.ACCOUNTS);

        set(0, id);
        set(1, name);
        set(2, displayName);
        set(3, lastOnline);
    }
}
